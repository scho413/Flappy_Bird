Library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;

entity Bird is
	port (clk: in std_logic;
			pixel_row, pixel_column: in std_logic_vector(9 downto 0);
			red, green, blue: out std_logic);
end entity Bird;

architecture behaviour of Bird is
	signal bird_on : std_logic;
	signal size, bird_y_pos, bird_x_pos : std_logic_vector(9 downto 0);
	begin
		size <= CONV_STD_LOGIC_VECTOR(8,10);
		
		bird_x_pos <= CONV_STD_LOGIC_VECTOR(590,10);
		bird_y_pos <= CONV_STD_LOGIC_VECTOR(350,10);
		
		bird_on <= '1' when (('0' & bird_x_pos <= pixel_column + size) and ('0' & pixel_column <= bird_x_pos + size) 
							and ('0' & bird_y_pos <= pixel_row + size) and ('0' & pixel_row <= bird_y_pos + size)) else '0';
		red <= '1';
		green <= not bird_on;
		blue <= not bird_on;
end architecture behaviour;